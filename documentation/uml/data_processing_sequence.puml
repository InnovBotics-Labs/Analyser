@startuml Budget Analyser Data Processing Sequence

title Budget Analyser - Data Processing Flow

actor User
participant "main_be" as Main
participant "Statements" as Statements
participant "OriginalStatement" as OriginalStatement
participant "StatementFormatter" as StatementFormatter
participant "Processor" as Processor
participant "JsonHandler" as JsonHandler
participant "Report" as Report
participant "Logger" as Logger

User -> Main: Start application
activate Main

Main -> Logger: info("started")
activate Logger
Logger --> Main: 
deactivate Logger

Main -> Statements: create()
activate Statements

Statements -> OriginalStatement: get raw data
activate OriginalStatement
OriginalStatement --> Statements: raw data
deactivate OriginalStatement

Statements -> StatementFormatter: format data
activate StatementFormatter
StatementFormatter --> Statements: formatted data
deactivate StatementFormatter

Statements -> Logger: log operations
activate Logger
Logger --> Statements: 
deactivate Logger

Statements --> Main: transactions
deactivate Statements

Main -> Processor: create(raw_transactions)
activate Processor

Processor -> JsonHandler: get mapping data
activate JsonHandler
JsonHandler --> Processor: mapping data
deactivate JsonHandler

Processor -> Processor: process_transactions()
Processor -> Processor: _add_category()
Processor -> Processor: _add_sub_category()
Processor -> Processor: _add_c_or_d()

Processor -> Logger: log operations
activate Logger
Logger --> Processor: 
deactivate Logger

Processor --> Main: processed_transactions
deactivate Processor

Main -> Main: group transactions by month

loop for each month
    Main -> Logger: critical(month)
    activate Logger
    Logger --> Main: 
    deactivate Logger
    
    Main -> Report: create(statement=group)
    activate Report
    
    Report -> Report: earnings()
    Report -> Logger: table(earnings)
    activate Logger
    Logger --> Report: 
    deactivate Logger
    
    Report -> Report: expenses()
    Report -> Logger: table(expenses)
    activate Logger
    Logger --> Report: 
    deactivate Logger
    
    Report -> Report: expenses_category()
    Report -> Logger: table(expenses_category)
    activate Logger
    Logger --> Report: 
    deactivate Logger
    
    Report -> Report: expenses_sub_category()
    Report -> Logger: table(expenses_sub_category)
    activate Logger
    Logger --> Report: 
    deactivate Logger
    
    Report --> Main: reports
    deactivate Report
end

Main -> Logger: info("Ended")
activate Logger
Logger --> Main: 
deactivate Logger

Main --> User: Display results
deactivate Main

@enduml